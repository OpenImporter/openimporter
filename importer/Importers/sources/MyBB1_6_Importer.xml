<?xml version="1.0"?>
<importer xmlns="http://www.elkarte.net/xml/importer" xmlns:smf="http://www.elkarte.net/">
	<general>
		<name>MyBB 1.6</name>
		<className>MyBB1_6</className>
	</general>
	<step id="members" type="mandatory">
		<title>Importing Members</title>
		<detect>{$from_prefix}users</detect>
		<query>
			SELECT
				uid AS id_member, SUBSTRING(username, 1, 255) AS member_name,
				SUBSTRING(username, 1, 255) AS real_name, email AS email_address,
				SUBSTRING(password, 1, 64) AS passwd, SUBSTRING(salt, 1, 8) AS password_salt,
				postnum AS posts, SUBSTRING(usertitle, 1, 255) AS usertitle,
				lastvisit AS last_login, IF(usergroup = 4, 1, 0) AS id_group,
				regdate AS date_registered, SUBSTRING(website, 1, 255) AS website_url,
				SUBSTRING(website, 1, 255) AS website_title, '' AS message_labels,
				SUBSTRING(signature, 1, 65534) AS signature, hideemail AS hide_email,
				SUBSTRING(buddylist, 1, 255) AS buddy_list, '' AS ignore_boards,
				SUBSTRING(regip, 1, 255) AS member_ip, SUBSTRING(regip, 1, 255) AS member_ip2,
				SUBSTRING(ignorelist, 1, 255) AS pm_ignore_list, avatar,
				timeonline AS total_time_logged_in, birthday AS birthdate, avatartype
			FROM {$from_prefix}users;
		</query>
	</step>
	<step id="categories">
		<title>Importing Categories</title>
		<detect>{$from_prefix}forums</detect>
		<query>
			SELECT fid AS id_cat, SUBSTRING(name, 1, 255) AS name, disporder AS cat_order
			FROM {$from_prefix}forums
			WHERE type = 'c';
		</query>
	</step>
	<step id="boards">
		<title>Importing Boards</title>
		<detect>{$from_prefix}forums</detect>
		<query>
			SELECT
				fid AS id_board, SUBSTRING(name, 1, 255) AS name,
				SUBSTRING(description, 1, 65534) AS description, disporder AS board_order,
				posts AS num_posts, threads AS num_topics, pid AS id_cat,
				usepostcounts != 'yes' AS count_posts, '1' AS member_groups
			FROM {$from_prefix}forums
			WHERE type = 'f';
		</query>
	</step>
	<step id="topics">
		<title>Importing Topics</title>
		<detect>{$from_prefix}threads</detect>
		<query>
			SELECT
				t.tid AS id_topic, t.fid AS id_board, t.sticky AS is_sticky,
				t.poll AS id_poll, t.views AS num_views, IFNULL(t.uid, 0) AS id_member_started,
				IFNULL(ul.uid, 0) AS id_member_updated, t.replies AS num_replies,
				CASE
					WHEN (t.closed = '1') THEN 1
					ELSE 0
				END AS locked,
				MIN(p.pid) AS id_first_msg, MAX(p.pid) AS id_last_msg
			FROM {$from_prefix}threads AS t
				INNER JOIN {$from_prefix}posts AS p
				LEFT JOIN {$from_prefix}users AS ul ON (BINARY ul.username = t.lastposter)
			WHERE p.tid = t.tid
			GROUP BY t.tid
			HAVING id_first_msg != 0
				AND id_last_msg != 0;
		</query>
	</step>
	<step id="messages">
		<title>Importing Messages</title>
		<detect>{$from_prefix}posts</detect>
		<options>
			<limit>100</limit>
		</options>
		<query>
			SELECT
				p.pid AS id_msg, p.tid AS id_topic, t.fid AS id_board, p.uid AS id_member,
				SUBSTRING(p.username, 1, 255) AS poster_name, p.dateline AS poster_time,
				SUBSTRING(p.ipaddress, 1, 255) AS poster_ip,
				SUBSTRING(IF(p.subject = '', t.subject, p.subject), 1, 255) AS subject,
				SUBSTRING(IF(p.uid > 0, u.email, ''), 1, 255) AS poster_email,
				p.smilieoff = 'no' AS smileys_enabled,
				SUBSTRING(IF(p.edituid > 0, edit_u.username, 0), 1, 255) AS modified_name,
				p.edittime AS modified_time, SUBSTRING(p.message, 1, 65534) AS body, 'xx' AS icon
			FROM {$from_prefix}posts AS p
				INNER JOIN {$from_prefix}threads AS t
				LEFT JOIN {$from_prefix}users AS u ON (u.uid = p.uid)
				LEFT JOIN {$from_prefix}users AS edit_u ON (edit_u.uid = p.edituid)
			WHERE t.tid = p.tid;
		</query>
	</step>
	<step id="polls">
		<title>Importing polls</title>
		<detect>{$from_prefix}polls</detect>
		<query>
			SELECT
				p.pid AS id_poll, SUBSTRING(p.question, 1, 255) AS question, p.closed AS voting_locked,
				t.uid AS id_member, IF(p.timeout = 0, 0, p.dateline + p.timeout * 86400) AS expire_time,
				SUBSTRING(t.username, 1, 255) AS poster_name
			FROM {$from_prefix}polls AS p
				LEFT JOIN {$from_prefix}threads AS t ON (t.tid = p.tid);
		</query>
	</step>
	<step id="polloptions">
		<title>Importing poll choices</title>
		<detect>{$from_prefix}polls</detect>
		<query>
			SELECT pid AS id_poll, options AS opt, votes
			FROM {$from_prefix}polls;
		</query>
	</step>
	<step id="pollvotes">
		<title>Importing poll votes</title>
		<detect>{$from_prefix}pollvotes</detect>
		<query>
			SELECT pid AS id_poll, uid AS id_member, voteoption AS id_choice
			FROM {$from_prefix}pollvotes;
		</query>
	</step>
	<step id="pm">
		<title>Importing personal messages</title>
		<detect>{$from_prefix}privatemessages</detect>
		<query>
			SELECT
				pm.pmid AS id_pm, pm.fromid AS id_member_from, pm.dateline AS msgtime,
				SUBSTRING(uf.username, 1, 255) AS from_name, SUBSTRING(pm.subject, 1, 255) AS subject,
				SUBSTRING(pm.message, 1, 65534) AS body
			FROM {$from_prefix}privatemessages AS pm
				LEFT JOIN {$from_prefix}users AS uf ON (uf.uid = pm.fromid)
			WHERE pm.folder != 2;
		</query>
	</step>
	<step id="pmrecipients">
		<title>Importing pm recipients</title>
		<detect>{$from_prefix}privatemessages</detect>
		<query>
			SELECT pmid AS id_pm, toid AS id_member, readtime != 0 AS is_read, '-1' AS labels
			FROM {$from_prefix}privatemessages
			WHERE folder != 2;
		</query>
	</step>
	<step id="notifications">
		<title>Importing topic notifications</title>
		<detect>{$from_prefix}threadsubscriptions</detect>
		<query>
			SELECT uid AS id_member, tid AS id_topic
			FROM {$from_prefix}threadsubscriptions;
		</query>
	</step>
	<step id="notifications">
		<title>Importing board notifications</title>
		<detect>{$from_prefix}forumsubscriptions</detect>
		<query>
			SELECT uid AS id_member, fid AS id_board
			FROM {$from_prefix}forumsubscriptions;
		</query>
	</step>
	<step id="attachments">
		<title>Importing attachments</title>
		<detect>{$from_prefix}attachments</detect>
		<query>
			SELECT pid AS id_msg, downloads, filename, filesize, attachname
			FROM {$from_prefix}attachments;
		</query>
	</step>
	<step id="avatars">
		<title>Importing avatars</title>
		<detect>{$from_prefix}users</detect>
		<query>
			SELECT uid AS id_member, avatar AS filename, avatartype as type
			FROM {$from_prefix}users
			WHERE avatartype = 'upload'
			OR avatartype = 'gallery';
		</query>
	</step>
</importer>