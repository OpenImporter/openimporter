tools:
    php_analyzer:
        config:
            parameter_reference_check: { enabled: true }
            checkstyle: { enabled: false, no_trailing_whitespace: true, naming: { enabled: true, local_variable: '^[a-z][a-zA-Z0-9]*$', abstract_class_name: ^Abstract|Factory$, utility_class_name: 'Utils?$', constant_name: '^[A-Z][A-Z0-9]*(?:_[A-Z0-9]+)*$', property_name: '^[a-z][a-zA-Z0-9]*$', method_name: '^(?:[a-z]|__)[a-zA-Z0-9]*$', parameter_name: '^[a-z][a-zA-Z0-9]*$', interface_name: '^[A-Z][a-zA-Z0-9]*Interface$', type_name: '^[A-Z][a-zA-Z0-9]*$', exception_name: '^[A-Z][a-zA-Z0-9]*Exception$', isser_method_name: '^(?:is|has|should|may|supports)' } }
            unreachable_code: { enabled: false }
            check_access_control: { enabled: true }
            typo_checks: { enabled: true }
            check_variables: { enabled: false }
            check_calls: { enabled: true, too_many_arguments: true, missing_argument: true, argument_type_checks: lenient }
            suspicious_code: { enabled: false, overriding_parameter: false, overriding_closure_use: false, parameter_closure_use_conflict: false, parameter_multiple_times: false, non_existent_class_in_instanceof_check: false, non_existent_class_in_catch_clause: false, assignment_of_null_return: false, non_commented_switch_fallthrough: false, non_commented_empty_catch_block: false, overriding_private_members: false, use_statement_alias_conflict: false, precedence_in_condition_assignment: false }
            dead_assignments: { enabled: true }
            verify_php_doc_comments: { enabled: true, parameters: true, suggest_more_specific_types: true, ask_for_param_type_annotation: true, return: false, ask_for_return_if_not_inferrable: false }
            loops_must_use_braces: { enabled: false }
            check_usage_context: { enabled: true, method_call_on_non_object: null, foreach: { value_as_reference: true, traversable: false }, missing_argument: null, argument_type_checks: null }
            simplify_boolean_return: { enabled: true }
            phpunit_checks: { enabled: false }
            reflection_checks: { enabled: false }
            precedence_checks: { enabled: true, assignment_in_condition: true, comparison_of_bit_result: true }
            basic_semantic_checks: { enabled: true }
            unused_code: { enabled: true }
            deprecation_checks: { enabled: false }
            useless_function_calls: { enabled: true }
            metrics_lack_of_cohesion_methods: { enabled: true }
            metrics_coupling: { enabled: true, stable_code: { namespace_prefixes: {  }, classes: {  } } }
            doctrine_parameter_binding: { enabled: false }
            doctrine_entity_manager_injection: { enabled: false }
            symfony_request_injection: { enabled: false }
            doc_comment_fixes: { enabled: false }
            reflection_fixes: { enabled: false }
            use_statement_fixes: { enabled: false, remove_unused: false, preserve_multiple: false, preserve_blanklines: false, order_alphabetically: false }
    php_code_sniffer:
        config:
            sniffs: { psr1: { files: { side_effects_sniff: false } }, generic: { code_analysis: { for_loop_with_test_function_call_sniff: false, jumbled_incrementer_sniff: false }, php: { forbidden_functions_sniff: true, lower_case_constant_sniff: true, character_before_php_opening_tag_sniff: false }, formatting: { space_after_cast_sniff: true }, functions: { function_call_argument_spacing_sniff: true, opening_function_brace_bsd_allman_sniff: true }, files: { end_file_no_newline_sniff: true }, naming_conventions: { constructor_name_sniff: true, upper_case_constant_name_sniff: true }, metrics: { cyclomatic_complexity_sniff: true, nesting_level_sniff: true } }, zend: { files: { closing_tag_sniff: true } }, squiz: { classes: { lowercase_class_keywords_sniff: true, class_declaration_sniff: true, self_member_reference_sniff: false }, white_space: { semicolon_spacing_sniff: true }, php: { disallow_ob_end_flush_sniff: true, commented_out_code_sniff: true, non_executable_code_sniff: false }, functions: { lowercase_function_keywords_sniff: true, function_duplicate_argument_sniff: true }, commenting: { function_comment_throw_tag_sniff: true }, operators: { valid_logical_operators_sniff: true } } }
    sensiolabs_security_checker:
    php_cpd:
        min_lines: '20'
    php_loc:
        names:
            - '*.php'
checks:
    php:
        code_rating: true

build:
    nodes:
        analysis:
            environment:
                php: 7.4.12

            tests:
                override:
                    - php-scrutinizer-run

    dependencies:
        override:
            - composer self-update
            - composer update --prefer-dist --no-interaction --no-progress --optimize-autoloader --ansi

    tests:
        override:
            -
                command: 'phpunit --coverage-clover=some-file --bootstrap .github/bootstrap.php Tests/'
                coverage:
                    file: 'some-file'
                    format: 'php-clover'

filter:
    excluded_paths:
        - Tests/*